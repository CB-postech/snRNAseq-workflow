library(Seurat)
library(scater)
library(scRNAseq)
library(harmony)
library(Seurat)
library(scater)
library(scRNAseq)
library(harmony)
Mossy.Ctrl.seurat.rev <- readRDS("D:/scgl-project/Mouse_hippocampus/snRNAseq_mouseBrain_Hippocampus_10x_Drd2/submission/figure-dataset/Mossy.Ctrl.seurat.rev.rds")
Mossy.Ctrl.seurat.rev
library(Seurat)
DimPlot(Mossy.Ctrl.seurat.rev)
library(DropletUtils)
library(scater)
library(scRNAseq)
library(Seurat)
library(SeuratDisk)
library(SeuratWrappers)
library(dplyr)
library(Matrix)
library(ktplots)
source(file="D:/R_mySource/R_officer.R")
source(file="D:/R_mySource/celltype_marker_pheatmap.R")
source(file="D:/R_mySource/scRNA-seq_Visualization/expressionMap.R")
set.seed(12345)
data.path="D:/scgl-project/Mouse_hippocampus/snRNAseq_mouseBrain_Hippocampus_10x_Drd2/submission/"
paste0(data.path,"figure-dataset/D2.seurat.harmony.rds")
data.path="D:/scgl-project/Mouse_hippocampus/snRNAseq_mouseBrain_Hippocampus_10x_Drd2/submission/"
D2.seurat.harmony=readRDS(file=paste0(data.path,"figure-dataset/D2.seurat.harmony.rds"))
DimPlot(D2.seurat.harmony,label=T)
s3_umap.expression(D2.seurat.harmony,Gene="Csf2rb2",order=F)
DimPlot(D2.seurat.harmony,label=T)
s3_umap.expression(D2.seurat.harmony,Gene="Csf2rb2",order=F)
StackedVlnPlot(D2.seurat.harmony,features = "Csf2rb2")
StackedVlnPlot(D2.seurat.harmony,features = c("Rbfox3","Csf2rb2","Drd2"))
s3_umap.expression(D2.seurat.harmony,Gene="Gfap",order=T)
s3_umap.expression(D2.seurat.harmony,Gene="Csf2rb2",order=F)
s3_umap.expression(D2.seurat.harmony,Gene="Drd2",order=F)
s3_umap.expression(D2.seurat.harmony,Gene="Prox1",order=F)
seurat.GC
seurat.GC
seurat.GC
seurat.GC
D2.seurat.harmony
D2.seurat.harmony
D2.seurat.harmony
range(D2.seurat.harmony$percent.mt)
range(D2.seurat.harmony$percent.mt)
range(D2.seurat.harmony$nCount_RNA)
range(D2.seurat.harmony$nFeature_RNA)
############################################################
# Mossy cell analysis
############################################################
seurat.MC=subset(D2.seurat.harmony,idents=c(5,18))
seurat.MC=seurat.MC %>% NormalizeData() %>% FindVariableFeatures(nfeatures=500) %>% ScaleData() %>% RunPCA()
ElbowPlot(seurat.MC, ndims=50)
dims=20
seurat.MC=seurat.MC %>% FindNeighbors(dims=1:dims) %>% FindClusters() %>%
RunUMAP(dims=1:dims) %>% RunTSNE(dims=1:dims,check_duplicate=F)
DimPlot(seurat.MC,reduction="umap",label=T)
dims=15
seurat.MC=seurat.MC %>% FindNeighbors(dims=1:dims) %>% FindClusters() %>%
RunUMAP(dims=1:dims) %>% RunTSNE(dims=1:dims,check_duplicate=F)
DimPlot(seurat.MC,reduction="umap",label=T)
############################################################
# Mossy cell analysis
############################################################
seurat.MC=subset(D2.seurat.harmony,idents=c(5,18))
seurat.MC=seurat.MC %>% NormalizeData() %>% FindVariableFeatures(nfeatures=200) %>% ScaleData() %>% RunPCA()
ElbowPlot(seurat.MC, ndims=50)
dims=20
seurat.MC=seurat.MC %>% FindNeighbors(dims=1:dims) %>% FindClusters() %>%
RunUMAP(dims=1:dims) %>% RunTSNE(dims=1:dims,check_duplicate=F)
DimPlot(seurat.MC,reduction="umap",label=T)
############################################################
# Mossy cell analysis
############################################################
seurat.MC=subset(D2.seurat.harmony,idents=c(5,18))
seurat.MC=seurat.MC %>% NormalizeData() %>% FindVariableFeatures(nfeatures=500) %>% ScaleData() %>% RunPCA()
ElbowPlot(seurat.MC, ndims=50)
dims=20
seurat.MC=seurat.MC %>% FindNeighbors(dims=1:dims) %>% FindClusters() %>%
RunUMAP(dims=1:dims) %>% RunTSNE(dims=1:dims,check_duplicate=F)
DimPlot(seurat.MC,reduction="umap",label=T)
DimPlot(seurat.MC,reduction="umap",label=F,group.by="condition")
set.seed(12345)
library(harmony)
harmony.seurat=seurat.MC
harmony.seurat=RunHarmony(harmony.seurat,"batch",max.iter.harmony=30)
ElbowPlot(harmony.seurat,reduction="harmony",ndims=50)
harmony.dims=20
harmony.seurat <- harmony.seurat %>%
RunUMAP(reduction = "harmony", dims = 1:harmony.dims) %>%
RunTSNE(reduction = "harmony", dims = 1:harmony.dims) %>%
FindNeighbors(reduction = "harmony", dims = 1:harmony.dims) %>%
FindClusters() %>% identity()
seurat.MC.harmony=harmony.seurat
DimPlot(seurat.MC.harmony)
DimPlot(seurat.MC.harmony,label=T)
harmony.dims=15
set.seed(12345)
library(harmony)
harmony.seurat=seurat.MC
harmony.seurat=RunHarmony(harmony.seurat,"batch",max.iter.harmony=30)
ElbowPlot(harmony.seurat,reduction="harmony",ndims=50)
harmony.dims=15
harmony.seurat <- harmony.seurat %>%
RunUMAP(reduction = "harmony", dims = 1:harmony.dims) %>%
RunTSNE(reduction = "harmony", dims = 1:harmony.dims) %>%
FindNeighbors(reduction = "harmony", dims = 1:harmony.dims) %>%
FindClusters() %>% identity()
seurat.MC.harmony=harmony.seurat
DimPlot(seurat.MC.harmony,label=T)
############################################################
# Mossy cell analysis
############################################################
seurat.MC=subset(D2.seurat.harmony,idents=c(5,18))
seurat.MC=seurat.MC %>% NormalizeData() %>% FindVariableFeatures(nfeatures=200) %>% ScaleData() %>% RunPCA()
ElbowPlot(seurat.MC, ndims=50)
dims=20
seurat.MC=seurat.MC %>% FindNeighbors(dims=1:dims) %>% FindClusters() %>%
RunUMAP(dims=1:dims) %>% RunTSNE(dims=1:dims,check_duplicate=F)
DimPlot(seurat.MC,reduction="umap",label=T)
set.seed(12345)
library(harmony)
harmony.seurat=seurat.MC
harmony.seurat=RunHarmony(harmony.seurat,"batch",max.iter.harmony=30)
ElbowPlot(harmony.seurat,reduction="harmony",ndims=50)
harmony.dims=15
harmony.seurat <- harmony.seurat %>%
RunUMAP(reduction = "harmony", dims = 1:harmony.dims) %>%
RunTSNE(reduction = "harmony", dims = 1:harmony.dims) %>%
FindNeighbors(reduction = "harmony", dims = 1:harmony.dims) %>%
FindClusters() %>% identity()
seurat.MC.harmony=harmony.seurat
DimPlot(seurat.MC.harmony,label=T)
############################################################
# Mossy cell analysis
############################################################
seurat.MC=subset(D2.seurat.harmony,idents=c(5,18))
seurat.MC=seurat.MC %>% NormalizeData() %>% FindVariableFeatures(nfeatures=500) %>% ScaleData() %>% RunPCA()
ElbowPlot(seurat.MC, ndims=50)
dims=20
seurat.MC=seurat.MC %>% FindNeighbors(dims=1:dims) %>% FindClusters() %>%
RunUMAP(dims=1:dims) %>% RunTSNE(dims=1:dims,check_duplicate=F)
DimPlot(seurat.MC,reduction="umap",label=T)
DimPlot(seurat.MC,reduction="umap",label=F,group.by="condition")
set.seed(12345)
library(harmony)
harmony.seurat=seurat.MC
harmony.seurat=RunHarmony(harmony.seurat,"batch",max.iter.harmony=30)
ElbowPlot(harmony.seurat,reduction="harmony",ndims=50)
harmony.dims=20
harmony.seurat <- harmony.seurat %>%
RunUMAP(reduction = "harmony", dims = 1:harmony.dims) %>%
RunTSNE(reduction = "harmony", dims = 1:harmony.dims) %>%
FindNeighbors(reduction = "harmony", dims = 1:harmony.dims) %>%
FindClusters() %>% identity()
seurat.MC.harmony=harmony.seurat
DimPlot(seurat.MC.harmony,label=T)
harmony.dims=20
harmony.seurat <- harmony.seurat %>%
RunUMAP(reduction = "harmony", dims = 1:harmony.dims) %>%
RunTSNE(reduction = "harmony", dims = 1:harmony.dims) %>%
FindNeighbors(reduction = "harmony", dims = 1:harmony.dims) %>%
FindClusters(resolution=1.0) %>% identity()
seurat.MC.harmony=harmony.seurat
DimPlot(seurat.MC.harmony,label=T)
harmony.dims=20
harmony.seurat <- harmony.seurat %>%
RunUMAP(reduction = "harmony", dims = 1:harmony.dims) %>%
RunTSNE(reduction = "harmony", dims = 1:harmony.dims) %>%
FindNeighbors(reduction = "harmony", dims = 1:harmony.dims) %>%
FindClusters(resolution=1.5) %>% identity()
seurat.MC.harmony=harmony.seurat
DimPlot(seurat.MC.harmony,label=T)
DimPlot(seurat.MC.harmony,label=T)
seurat.MC.harmony=FindClusters(seurat.MC.harmony,resolution = 2)
DimPlot(seurat.MC.harmony,label=T)
seurat.MC.harmony=FindClusters(seurat.MC.harmony,resolution = 3)
DimPlot(seurat.MC.harmony,label=T)
seurat.MC.harmony=FindClusters(seurat.MC.harmony,resolution = 5)
DimPlot(seurat.MC.harmony,label=T)
seurat.MC.harmony=FindClusters(seurat.MC.harmony,resolution = 3)
DimPlot(seurat.MC.harmony,label=T)
seurat.MC.harmony=FindClusters(seurat.MC.harmony,resolution = 4)
DimPlot(seurat.MC.harmony,label=T)
harmony.dims=20
harmony.seurat <- harmony.seurat %>%
RunUMAP(reduction = "harmony", dims = 1:harmony.dims) %>%
RunTSNE(reduction = "harmony", dims = 1:harmony.dims) %>%
FindNeighbors(reduction = "harmony", dims = 1:harmony.dims) %>%
FindClusters(resolution=4) %>% identity()
seurat.MC.harmony=harmony.seurat
# seurat.MC.harmony=FindClusters(seurat.MC.harmony,resolution = 4)
DimPlot(seurat.MC.harmony,label=T)
# seurat.MC.harmony=FindClusters(seurat.MC.harmony,resolution = 4)
DimPlot(seurat.MC.harmony,label=T)
markers.c19=FindMarkers(seurat.MC.harmony,idents=19,logfc.threshold = 1)
markers.c19=FindMarkers(seurat.MC.harmony,ident.1 = 19,logfc.threshold = 1)
markers.c19
StackedVlnPlot(seurat.MC.harmony,features = "Csf2rb2")
StackedVlnPlot(seurat.MC.harmony,features = c("Rbfox3","Drd2","Csf2rb2"))
StackedVlnPlot(seurat.MC.harmony,features = c("Rbfox3","Drd2","Aqp4"))
StackedVlnPlot(seurat.MC.harmony,features = c("Rbfox3","Drd2","Aqp4","Gfap"))
# seurat.MC.harmony=FindClusters(seurat.MC.harmony,resolution = 4)
DimPlot(seurat.MC.harmony,label=T)
markers.c17=FindMarkers(seurat.MC.harmony,ident.1 = 17,logfc.threshold = 1)
markers.c17
StackedVlnPlot(seurat.MC.harmony,features = "Ptprc")
StackedVlnPlot(seurat.MC.harmony,features = "Gfap")
markers.c7=FindMarkers(seurat.MC.harmony,ident.1 = 7,logfc.threshold = 1)
markers.c7
markers.c14=FindMarkers(seurat.MC.harmony,ident.1 = 14,logfc.threshold = 1)
markers.c14
StackedVlnPlot(seurat.MC.harmony,features = "Prox1")
StackedVlnPlot(seurat.MC.harmony,features = c("Drd2","Csf2rb2","Prox1","Bcl11b"))
markers.c14
StackedVlnPlot(seurat.MC.harmony,features = c("Drd2","Csf2rb2","Prox1","Bcl11b","Gad2"))
StackedVlnPlot(seurat.MC.harmony,features = c("Drd2","Csf2rb2","Prox1","Bcl11b","Gad2","Cntnap5b"))
StackedVlnPlot(seurat.MC.harmony,features = c("Drd2","Csf2rb2","Prox1","Bcl11b","Gad2","Cntnap5b","Rorb"))
markers.c14
StackedVlnPlot(seurat.MC.harmony,features =c("Cntnap5a","Cntnap5b"))
StackedVlnPlot(seurat.MC.harmony,features =c("Cntnap5a","Pvalb"))
markers.c14=FindMarkers(seurat.MC.harmony,ident.1 = 14,logfc.threshold = 1)
markers.c14
markers.c14=FindMarkers(seurat.MC.harmony,ident.1 = 14)
markers.c14
StackedVlnPlot(seurat.MC.harmony,features =c("Cntnap5a","Ociad2"))
StackedVlnPlot(seurat.MC.harmony,features =c("Cntnap5a","Cacng5"))
StackedVlnPlot(seurat.MC.harmony,features =c("Cntnap5a","Fibcd1"))
StackedVlnPlot(seurat.MC.harmony,features =c("Cntnap5a","Cck"))
StackedVlnPlot(seurat.MC.harmony,features =c("Cck","Cacng5","Gprin3"))
markers.c19
marker_pheatmap(seurat.MC.harmony,geneset = c("Csf2rb2","Gfap","Aqp","Mog","Mobp","Prox1","Bcl11b","Ociad2"))
marker_pheatmap(seurat.MC.harmony,geneset = c("Csf2rb2","Gfap","Aqp","Mog","Mobp","Prox1","Bcl11b","Ociad2"),scale.max = 3,scale.min = -3)
markers.c19=FindMarkers(seurat.MC.harmony,ident.1 = 19)
markers.c19
marker_pheatmap(seurat.MC.harmony,geneset = c("Csf2rb2","Gfap","Aqp","Mog","Mobp","Prox1","Bcl11b","Ociad2","Pecam1","Cldn5","Pdgfra"),scale.max = 3,scale.min = -3)
p1=marker_pheatmap(seurat.MC.harmony,geneset = c("Csf2rb2","Gfap","Aqp","Mog","Mobp","Prox1","Bcl11b","Ociad2","Pecam1","Cldn5","Pdgfra"),scale.max = 3,scale.min = -3)
p1
pheatmap2pptx(p = p1,w = 10, h = 10, filename = "D:/scgl-project/Mouse_hippocampus/snRNAseq_mouseBrain_Hippocampus_10x_Drd2/submission/figure-dataset/MC-cluster-marker-heatmap.pptx")
p1=marker_pheatmap(seurat.MC.harmony,geneset = c("Csf2rb2","Gfap","Aqp","Mog","Mobp","Prox1","Bcl11b","Ociad2","Pecam1","Cldn5","Pdgfra","Man1a"),scale.max = 3,scale.min = -3)
p1=marker_pheatmap(seurat.MC.harmony,geneset = c("Drd2","Csf2rb2","Gfap","Aqp","Mog","Mobp","Prox1","Bcl11b","Ociad2","Pecam1","Cldn5","Pdgfra","Man1a"),scale.max = 3,scale.min = -3)
s3_umap.expression(seurat.MC.harmony,Gene="Drd2",order=F)
s3_umap.expression(seurat.MC.harmony,Gene="Csf2rb2",order=F)
s3_umap.expression(seurat.MC.harmony,Gene="Ociad2",order=F)
s3_umap.expression(seurat.MC.harmony,Gene="Csf2rb2",order=F)
s3_umap.expression(seurat.MC.harmony,Gene="Man1a",order=F)
s3_umap.expression(seurat.MC.harmony,Gene="Calb2",order=F)
s3_umap.expression(seurat.MC.harmony,Gene="Drd2",order=F)
s3_umap.expression(seurat.MC.harmony,Gene="Ociad2",order=F)
s3_umap.expression(seurat.MC.harmony,Gene="Bcl11b",order=F)
seurat.MC.harmony[["log10umis"]] <- log10(colSums(seurat.MC.harmony@assays$RNA@counts))
seurat.MC.harmony[["log10ngenes"]] <- log10(colSums(seurat.MC.harmony@assays$RNA@counts!=0))
seurat.MC.harmony <- PercentageFeatureSet(seurat.MC.harmony, "^mt-", col.name = "percent.mt")
saveRDS(seurat.MC.harmony,file="D:/scgl-project/Mouse_hippocampus/snRNAseq_mouseBrain_Hippocampus_10x_Drd2/submission/figure-dataset/seurat.MC.harmony.rds")
DimPlot(D2.seurat.harmony,label=T)
DimPlot(D2.seurat.harmony,label=T)
DimPlot(D2.seurat.harmony,label=T)
############################################################
# Drd2(+) cluster analysis
############################################################
s3_umap.expression(D2.seurat.harmony,Gene="Drd2",order=F)
############################################################
# Drd2(+) cluster analysis
############################################################
s3_umap.expression(D2.seurat.harmony,Gene="Rbfox3",order=F)
StackedVlnPlot(D2.seurat.harmony,features = "Drd2")
markers.c11=FindMarkers(D2.seurat.harmony,ident.1 = 11, logfc.threshold = 1)
markers.c11
############################################################
# Drd2(+) cluster analysis
############################################################
s3_umap.expression(D2.seurat.harmony,Gene="Ociad2",order=F)
marker_pheatmap(D2.seurat.harmony,geneset = c("Rbfox3","Drd2","Prox1","Ociad2","Dkk3","Mog","Mobp","Pdgfra","Pdgfrb","Aqp4","Gfap"),scale.max = 3,scale.min = -3)
marker_pheatmap(D2.seurat.harmony,geneset = c("Rbfox3","Drd2","Prox1","Ociad2","Dkk3","Mog","Mobp","Pdgfra","Pdgfrb","Aqp4","Gfap","Dcn","Pecam1","Cldn5","Gja1"),scale.max = 3,scale.min = -3)
StackedVlnPlot(D2.seurat.harmony,features = "Hbb-bt")
############################################################
# Drd2(+) cluster analysis
############################################################
s3_umap.expression(D2.seurat.harmony,Gene="Epcam",order=F)
############################################################
# Drd2(+) cluster analysis
############################################################
s3_umap.expression(D2.seurat.harmony,Gene="Krt18",order=F)
p1=marker_pheatmap(D2.seurat.harmony,geneset = c("Rbfox3","Drd2","Prox1","Ociad2","Dkk3","Mog","Mobp","Pdgfra","Pdgfrb","Aqp4","Gfap","Dcn","Pecam1","Cldn5","Gja1"),scale.max = 3,scale.min = -3)
getwd()
p1=marker_pheatmap(D2.seurat.harmony,geneset = c("Rbfox3","Drd2","Prox1","Ociad2","Dkk3","Mog","Mobp","Pdgfra","Pdgfrb","Aqp4","Gfap","Dcn","Pecam1","Cldn5","Gja1"),scale.max = 3,scale.min = -3)
pheatmap2pptx(p = p1,w = 10, h = 10, filename = "D:/scgl-project/Mouse_hippocampus/snRNAseq_mouseBrain_Hippocampus_10x_Drd2/submission/figure/cluster-marker-heatmap.pptx")
DimPlot(D2.seurat.harmony,label=T)
seurat.neuron=subset(D2.seurat.harmony,idents=c(21,43,31,40,4,42,27,36,22,24,30),invert=T)
seurat2harmony.v2=function(orig.seurat,dims,harmony.dims,batch.term,nfeatures){
orig.seurat=orig.seurat %>% NormalizeData() %>% FindVariableFeatures(nfeatures=nfeatures) %>%
ScaleData() %>% RunPCA(npcs=dims) %>%
FindNeighbors(dims=1:dims) %>% FindClusters(resolution=1) # %>%
# RunUMAP(dims = 1:dims) %>% RunTSNE(dims = 1:dims,check_duplicate=F)
harmony.seurat=orig.seurat
harmony.seurat=RunHarmony(harmony.seurat,batch.term,max.iter.harmony=30)
harmony.seurat <- harmony.seurat %>%
RunUMAP(reduction = "harmony", dims = 1:harmony.dims) %>%
RunTSNE(reduction = "harmony", dims = 1:harmony.dims) %>%
FindNeighbors(reduction = "harmony", dims = 1:harmony.dims) %>%
FindClusters(resolution=1) %>% identity()
return(harmony.seurat)
}
seurat.neuron=subset(D2.seurat.harmony,idents=c(21,43,31,40,4,42,27,36,22,24,30),invert=T)
nfeatures=500;dims=50
seurat.neuron=seurat.neuron %>% NormalizeData() %>% FindVariableFeatures(nfeatures=nfeatures) %>%
ScaleData() %>% RunPCA(npcs=dims) %>%
FindNeighbors(dims=1:dims) %>% FindClusters() %>%
RunUMAP(dims = 1:dims) %>% RunTSNE(dims = 1:dims,check_duplicate=F)
seurat.neuron
DimPlot(seurat.neuron,label=T)
DimPlot(seurat.neuron,label=T)
DimPlot(seurat.neuron,label=T,group.by = "batch")
seurat2harmony.v2
library(harmony)
harmony.seurat=seurat.neuron
harmony.seurat=seurat.neuron
harmony.seurat=RunHarmony(harmony.seurat,"batch",max.iter.harmony=30)
ElbowPlot(harmony.seurat,reduction = "harmony",ndims = 20)
harmony.dims=15
harmony.seurat <- harmony.seurat %>%
RunUMAP(reduction = "harmony", dims = 1:harmony.dims) %>%
RunTSNE(reduction = "harmony", dims = 1:harmony.dims) %>%
FindNeighbors(reduction = "harmony", dims = 1:harmony.dims) %>%
FindClusters(resolution=1) %>% identity()
seurat.neuron.harmony=harmony.seurat
DimPlot(seurat.neuron.harmony,label=T)
s3_umap.expression(seurat.neuron.harmony,Gene="Rbfox3",order=F)
StackedVlnPlot(seurat.neuron.harmony,features = "Rbfox3")
StackedVlnPlot(seurat.neuron.harmony,features = c("Rbfox3","Drd2"))
ElbowPlot(harmony.seurat,reduction = "harmony", ndims = 30)
harmony.dims=20
harmony.dims=20
library(harmony)
harmony.seurat=seurat.neuron
harmony.seurat=RunHarmony(harmony.seurat,"batch",max.iter.harmony=30)
ElbowPlot(harmony.seurat,reduction = "harmony", ndims = 30)
harmony.dims=20
harmony.seurat <- harmony.seurat %>%
RunUMAP(reduction = "harmony", dims = 1:harmony.dims) %>%
RunTSNE(reduction = "harmony", dims = 1:harmony.dims) %>%
FindNeighbors(reduction = "harmony", dims = 1:harmony.dims) %>%
FindClusters(resolution=1) %>% identity()
seurat.neuron.harmony=harmony.seurat
DimPlot(seurat.neuron.harmony,label=T)
s3_umap.expression(seurat.neuron.harmony,Gene="Rbfox3",order=F)
s3_umap.expression(seurat.neuron.harmony,Gene="Drd2",order=F)
s3_umap.expression(seurat.neuron.harmony,Gene="Drd2",order=T)
s3_umap.expression(seurat.neuron.harmony,Gene="Drd2",order=F)
s3_umap.expression(seurat.neuron.harmony,Gene="Gad",order=F)
s3_umap.expression(seurat.neuron.harmony,Gene="Gad2",order=F)
DimPlot(seurat.neuron.harmony,label=T)
s3_umap.expression(seurat.neuron.harmony,Gene="Gfap",order=F)
markers.c8=FindMarkers(seurat.neuron.harmony,ident.1 = 8,only.pos = T,logfc.threshold = 1)
markers.c8
markers.c8[markers.c8$avg_log2FC>1,]
markers.c8[markers.c8$avg_log2FC>2,]
s3_umap.expression(seurat.neuron.harmony,Gene="Ociad2",order=F)
s3_umap.expression(seurat.neuron.harmony,Gene="Man1a",order=F)
s3_umap.expression(seurat.neuron.harmony,Gene="Prox1",order=F)
seurat.neuron=subset(D2.seurat.harmony,idents=c(21,43,31,40,4,42,27,36,22,24,30),invert=T)
nfeatures=200;dims=50
seurat.neuron=seurat.neuron %>% NormalizeData() %>% FindVariableFeatures(nfeatures=nfeatures) %>%
ScaleData() %>% RunPCA(npcs=dims) %>%
FindNeighbors(dims=1:dims) %>% FindClusters() %>%
RunUMAP(dims = 1:dims) %>% RunTSNE(dims = 1:dims,check_duplicate=F)
library(harmony)
harmony.seurat=seurat.neuron
harmony.seurat=RunHarmony(harmony.seurat,"batch",max.iter.harmony=30)
seurat.neuron_Drd2.ctrl.harmony <- readRDS("E:/Mouse_hippocampus/submission-project2/submission/data/seurat.neuron_Drd2.ctrl.harmony.rds")
library(Seurat)
library(scater)
library(scRNAseq)
library(CellChat)
library(dplyr)
library(ktplots)
library(harmony)
library(pheatmap)
library(lme4)
library(fgsea)
library(rlist)
E:\Mouse_hippocampus\submission-project2\submission\data
seurat.neuron_Drd2.ctrl.harmony
DimPlot(seurat.neuron_Drd2.ctrl.harmony)
DimPlot(seurat.neuron_Drd2.ctrl.harmony,label=T)
DimPlot(seurat.neuron_Drd2.ctrl.harmony,label=T,reduction = "tsne")
GC_total.pure <- readRDS("E:/Mouse_hippocampus/submission-project1/data/Split-seq/GC_total.pure.rds")
head(GC_total.pure@meta.data)
table(GC_total.pure$orig.ident)
table(GC_total.pure$orig.ident,GC_total.pure$condition)
unlist(lapply(strsplit(colnames(GC_total.pure),FUN=function(x){x[5]})))
unlist(lapply(strsplit(colnames(GC_total.pure),split = "_", fixed = T),FUN=function(x){x[5]}))
table(unlist(lapply(strsplit(colnames(GC_total.pure),split = "_", fixed = T),FUN=function(x){x[5]})))
library(Seurat)
library(scater)
source(file="D:/R_mySource/R_officer.R")
source(file="D:/R_mySource/celltype_marker_pheatmap.R")
source(file="D:/R_mySource/scRNA-seq_Visualization/expressionMap.R")
ieg.geneset=read.table(file="D:/scgl-project/Mouse_hippocampus/IEG-Geneset.txt",sep="\t"); ieg.geneset=ieg.geneset$V1
seurat.GC <- readRDS("D:/scgl-project/Mouse_hippocampus/snRNAseq_mouse_BrainHippocampus_SplitSeq/GC_total.pure.rds")
DimPlot(seurat.GC,reduction="tsne",label=F,group.by="subgroup",cols=c('#ff7f00','#e41a1c','#a6cee3','#4daf4a'),
cells=colnames(seurat.GC)[seurat.GC$condition=="Ctrl"])
seurat.GC$condition
table(seurat.GC$condition)
seurat.GC.harmony <- readRDS("D:/scgl-project/Mouse_hippocampus/snRNAseq_mouseBrain_Hippocampus_10x_Drd2/submission/figure-dataset/seurat.GC.harmony.rds")
library(Seurat)
seurat.GC.harmony
DimPlot(seurat.GC.harmony)
table(seurat.GC.harmony$condition)
library(DropletUtils)
library(scater)
library(scRNAseq)
library(Seurat)
library(SeuratDisk)
library(SeuratWrappers)
library(dplyr)
library(ktplots)
source(file="D:/R_mySource/R_officer.R")
source(file="D:/R_mySource/celltype_marker_pheatmap.R")
source(file="D:/R_mySource/scRNA-seq_Visualization/expressionMap.R")
# Source
seurat2harmony.v2=function(orig.seurat,dims,harmony.dims,batch.term,nfeatures){
orig.seurat=orig.seurat %>% NormalizeData() %>% FindVariableFeatures(nfeatures=nfeatures) %>%
ScaleData() %>% RunPCA(npcs=dims) %>%
FindNeighbors(dims=1:dims) %>% FindClusters(resolution=1) # %>%
# RunUMAP(dims = 1:dims) %>% RunTSNE(dims = 1:dims,check_duplicate=F)
harmony.seurat=orig.seurat
harmony.seurat=RunHarmony(harmony.seurat,batch.term,max.iter.harmony=30)
harmony.seurat <- harmony.seurat %>%
RunUMAP(reduction = "harmony", dims = 1:harmony.dims) %>%
RunTSNE(reduction = "harmony", dims = 1:harmony.dims) %>%
FindNeighbors(reduction = "harmony", dims = 1:harmony.dims) %>%
FindClusters(resolution=1) %>% identity()
return(harmony.seurat)
}
marker_pheatmap=function(geneset,seuratset,scale.max,scale.min,scale.threshold){
geneset=geneset[geneset %in% rownames(seuratset)]
logcounts=GetAssayData(seuratset, slot = "data", assay = "RNA"); logcounts=logcounts[geneset,]
scaled_mat=t(scale(t(logcounts)))
scaled_mat=na.omit(scaled_mat)
max(scaled_mat); min(scaled_mat)
scaled_mat[scaled_mat > scale.max] <- (scale.max)
scaled_mat[scaled_mat < (scale.min)]= (scale.min)
# hist(scaled_mat,breaks = 200)
cluster_df=data.frame(row.names=colnames(seuratset),
cluster=seuratset$seurat_clusters)
cluster_num=max(as.numeric(seuratset$seurat_clusters))-1
dataset=c(); for ( i in 0:cluster_num) {
dataset=rbind(dataset,rowMeans(scaled_mat[,rownames(cluster_df)[cluster_df$cluster==i]]))
}; rownames(dataset) <- paste0("Cluster_",c(0:cluster_num))
dataset=dataset[,(colSums(abs(dataset))>scale.threshold)]
library(pheatmap)
mypalette  = colorRampPalette(
c("#053061","#2166ac","#f7f7f7", "#d6604d","#9e0142")
)(255); range <- max(abs(dataset))
pheatmap(dataset,color = mypalette,breaks = seq(-range, range, length.out = 255), na_col = "#e0e0e0", show_colnames = T,cluster_cols = T,cluster_rows = T)
}
seurat_cmo.mc2.harmony=readRDS("D:/scgl-project/Mouse_hippocampus/snRNAseq_mouse_BrainHippocampus_10x_CMO/data/processing-dataset/seurat_cmo.mc2.harmony.rds")
DimPlot(seurat_cmo.mc2.harmony)
s3_umap.expression(seurat_cmo.mc2.harmony,Gene="Raver2",order=F)
s3_umap.expression(seurat_cmo.mc2.harmony,Gene="Calb2",order=F)
s3_umap.expression(seurat_cmo.mc2.harmony,Gene="Nrxn3",order=F)
s3_umap.expression(seurat_cmo.mc2.harmony,Gene="Bdnf",order=F)
s3_umap.expression(seurat_cmo.mc2.harmony,Gene="Sorcs3",order=F)
#######################################################
# Mossy cell contingency table analysis
#######################################################
seurat_cmo.mc2.harmony$condition
#######################################################
# Mossy cell contingency table analysis
#######################################################
levels(seurat_cmo.mc2.harmony$condition)
#######################################################
# Mossy cell contingency table analysis
#######################################################
conditions=levels(seurat_cmo.mc2.harmony$condition)
levels(seurat_cmo.mc2.harmony$condition)
#######################################################
# Mossy cell contingency table analysis
#######################################################
conditions=levels(seurat_cmo.mc2.harmony$condition)
conditions
conditions[2:6]
fisher.test.res=data.frame(condition=conditions[2:6], p.value=c(0.7426,0.0083,0.005,0.0103,0.0001))
fisher.test.res
fisher.test.res=data.frame(condition=conditions[2:6], p.value=c(0.7426,0.0083,0.005,0.0103,0.0001))
fisher.test.res$log10_pval=(-log10(fisher.test.res$p.value))
head(fisher.test.res)
fisher.test.res
library(ggplot2)
p<-ggplot(data=fisher.test.res, aes(x=condition, y=log10_pval)) +
geom_bar(stat="identity")
p
ggplot2pptx(p=p,w=5,h=5,filename="D:/scgl-project/Mouse_hippocampus/snRNAseq_mouse_BrainHippocampus_10x_CMO/figure/fisher-test-result.pptx")
seurat_cmo.mc2.harmony
setwd("D:/scgl-project/Mouse_hippocampus/snRNAseq.pipe")
dir()
devtools::install("R")
library(snRNAseq.pipe)
?marker_pheatmap
?seurat2harmony
seurat2harmony
?seurat2harmony
?snRNAseq_CITEseq_Integration
snRNAseq_CITEseq_Integration
library(snRNAseq.pipe)
snRNAseq_CITEseq_Integration
snRNAseq_CITEseq_Integration
q()
